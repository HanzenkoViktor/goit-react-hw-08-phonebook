{"version":3,"file":"static/js/117.5cbb2190.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactItem/ContactItem.styled.jsx","components/ContactsList/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","pages/ContactPage/ContactPage.styled.jsx","pages/ContactPage/ContactPage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n\nexport const getFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) return contacts;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);","import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  display: flex;\n  gap: 7px;\n  flex-direction: column;\n  justify-content: center;\n  padding: 20px;\n  width: 300px;\n  border: 1px solid blue;\n`;\n\nconst Input = styled.input`\n  outline: none;\n  padding: 5px;\n`;\n\nconst Button = styled.button`\n  width: 80px;\n  padding: 6px;\n  font-size: 12px;\n  text-align: center;\n  color: #fff;\n  background-color: blue;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: #918d8d;\n  }\n  @media screen and (min-width: 760px) {\n    width: 100px;\n    padding: 7px;\n    font-size: 14px;\n  }\n`;\n\nexport { Form, Input, Button };","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { addContact } from '../../redux/contacts/operation';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, Input, Button } from './ContactForm.styled';\n\nconst shortid = require('shortid');\nconst inputNameId = shortid.generate();\nconst inputNumberId = shortid.generate();\nconst buttonId = shortid.generate();\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const changeName = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const changeNumber = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const isContains = contactName => {\n    return contacts.some(({ name }) => name === contactName);\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    if (isContains(name)) {\n      alert(`${name} is allready in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handelSubmit}>\n      <label htmlFor={inputNameId}>\n        <span>Name</span>\n      </label>\n      <Input\n        autoComplete=\"off\"\n        type=\"text\"\n        name=\"name\"\n        id={inputNameId}\n        value={name}\n        onChange={changeName}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label htmlFor={inputNumberId}>\n        <span>Number</span>\n      </label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        id={inputNumberId}\n        value={number}\n        onChange={changeNumber}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <label htmlFor={buttonId}>\n        <Button type=\"submit\" id={buttonId}>\n          Add contact\n        </Button>\n      </label>\n    </Form>\n  );\n};\n\nexport default ContactForm;","import styled from '@emotion/styled';\n\nconst SectionFilter = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  font-size: 17px;\n  @media screen and (min-width: 760px) {\n    font-size: 20px;\n  }\n`;\n\nconst Label = styled.label`\n  margin: 5px;\n width: 210px;\n @media screen and (min-width: 451px) {\n    width: 330px;\n  }\n`;\nconst Input = styled.input`\n  outline: none;\n  padding: 5px;\n  border: 1px solid blue;\n  margin-bottom: 20px;\n`;\n\n\nexport { SectionFilter, Label, Input };\n","import { SectionFilter, Label, Input } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filtersSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const filterContact = target.value.toLowerCase();\n    dispatch(setFilter(filterContact))\n  };\n\n  return (\n    <SectionFilter>\n      <Label>Сontact search</Label>\n      <Input type=\"text\" onChange={handleChange} />\n    </SectionFilter>\n  );\n};\n\nexport default Filter;","import styled from '@emotion/styled';\n\nconst ListOfContact = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst Container = styled.div`\n  width: 200px;\n  margin: 0;\n  border: 1px solid blue;\n  border-radius: 6px;\n  padding: 20px;\n  font-size: 13px;\n  @media screen and (min-width: 451px) {\n   width: 300px;\n     padding: 20px;\n     font-size: 14px;\n }\n   @media screen and (min-width: 1200px) {\n     width: 300px;\n     padding: 20px;\n     font-size: 15px;\n   }\n `;\n\nexport { ListOfContact, Container };\n","import styled from '@emotion/styled';\n\nconst ContactItem = styled.li`\n  margin: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  padding: 5px;\n  font-size: 12px;\n  text-align: center;\n  color: #fff;\n  background-color: blue;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    background-color: #918d8d;\n  }\n  @media screen and (min-width: 451px) {\n  width: 60px;\n  font-size: 14px;\n}\n`;\n\nexport { ContactItem, Button };\n","import { PropTypes } from 'prop-types';\nimport { ContactItem, Button } from './ContactItem.styled';\nimport { deleteContact } from '../../../redux/contacts/operation';\nimport { useDispatch } from 'react-redux';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n  return (\n    <ContactItem>\n      <p>\n        {name}: {number}\n      </p>\n\n      <Button onClick={handleDelete} title=\"Delete contact\">\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nContactListItem.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;","import { ListOfContact, Container } from './ContactsList.styled';\nimport ContactListItem from './ContactItem/ContactItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getFilteredContacts } from 'redux/contacts/selectors';\nimport {fetchContacts} from '../../redux/contacts/operation'\n\nconst ContactsList = () => {\n  const filterContact = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\nuseEffect(() => {\n  dispatch(fetchContacts())\n}, [dispatch])\n\n  return (\n    <Container>\n      <h2>My contacts</h2>\n      <ListOfContact>\n        {filterContact.map(({ name, number, id }) => (\n          <ContactListItem name={name} number={number} id={id} key={id} />\n        ))}\n      </ListOfContact>\n    </Container>\n  );\n};\n\nexport default ContactsList;","import styled from '@emotion/styled';\n\nexport const ContactDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 85%;\n  margin: 20px auto;\n  color: blue;\n  background-color: white;\n  padding: 20px 10px;\n  border: 2px dashed blue;\n  border-radius: 4%;\n  @media screen and (min-width: 760px) {\nwidth: 440px;\npadding: 20px;\n\t}\n\t@media screen and (min-width: 1200px) {\n    padding: 40px 80px 100px 80px;\n    width: 500px;\n    margin: 30px auto;\n\t}\n`;\n","import ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactsList from '../../components/ContactsList/ContactsList';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport { ContactDiv } from './ContactPage.styled';\n\nconst ContactPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <main>\n      <ContactDiv>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <Filter />\n        {isLoading && !error && `...Loading`}\n        <ContactsList />\n      </ContactDiv>\n    </main>\n  );\n};\n\nexport default ContactPage;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","getFilteredContacts","filter","contact","toLowerCase","includes","Form","styled","Input","Button","shortid","require","inputNameId","generate","inputNumberId","buttonId","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","reset","onSubmit","e","contactName","preventDefault","some","alert","addContact","htmlFor","autoComplete","type","id","onChange","currentTarget","pattern","title","required","SectionFilter","Label","filterContact","target","setFilter","ListOfContact","Container","ContactItem","ContactListItem","onClick","deleteContact","prototype","PropTypes","useEffect","fetchContacts","ContactDiv","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","setCharacters","_alphabet_","unique","split","item","ind","arr","lastIndexOf","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","shuffle","characters","seed","lookup","index","counter","previousSeconds","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","_seed_","mask","log","LN2","step"],"sourceRoot":""}